{% extends 'AcmeBoardBundle::layout.html.twig' %}
{% use '::page.html.twig' %}
{% block body %}
<script src="{{ asset('js/JSLINQ.js') }}"></script>
<script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
<script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>

<ol class="breadcrumb">
  <li><a href="/">Home</a></li>
  <li><a href="{{ path('module_index') }}">Board</a></li>
  <li class="dropdown"><a href="{{ path('module_index') }}#{{ module.id }}" data-target="#" data-toggle="dropdown">{{ module.parent.name }}</a>
    <ul class="dropdown-menu">
      {% for child in module.parent.children %}
        <li role="presentation"><a role="menuitem" tabindex="-1" href="{{ path('thread_index', {'module_id': child.id}) }}">{{ child.name }}</a></li>       
      {% endfor %}
    </ul>
  </li>
  <li class="active">{{ module.name }}</li>  
</ol>
<div class="page-header">
  <h1>{{ module.name }} <small>Subtext for header</small></h1>
</div>
<div><a class="btn btn-primary" href="{{ path('thread_create', {'module_id': app.request.get('module_id')}) }}"><!-- <span class="glyphicon glyphicon-plus"></span> --><strong>CREATE THREAD</strong></a>
</div>
<div class="table-condensed">
  <table class="table table-hover">
    <thead>
      <tr>
        <th style="width: 5%">#</th>
        <th style="width: 45%">Subject</th>
        <th style="width: 15%">Author</th>
        <th style="width: 10%">Replies</th>
        <th style="width: 10%">Views</th>        
        <th style="width: 15%">Last Post</th>
      </tr>
    </thead>
    <tbody>
      {% for thread in pagination %}
      <tr>
        <td><span class="last_comment_id hidden">{{ thread.lastComment.id }}</span><span class="thread_id hidden">{{ thread.id }}</span></td>
        <td>{% if thread.status == 0 %}<span class="label label-default">Default</span>{% endif %}
        <a href="{{ path('thread_view', {'id': thread.id}) }}" data-toggle="tooltip" title="{{ thread.content }}">{{ thread.title|truncate(40) }}</a></td>
        <td>{{ thread.user.username }} </td>      
        <td><span class="">{{ thread.numReplies|number_format }}</span></td>    
        <td>{{ thread.numViews }}</td>  
        <td>{{ thread.updatedAt|time_ago_in_words }}</td>                  
      </tr>
      {% endfor %}
    </tbody>
  </table>
</div>

{% block pagingwrapper %}
  {{ parent() }}
{% endblock %}
<input type="hidden" id="module_id" value="{{ module.id }}" />

<script>
// TODO
if (!String.prototype.format) {
  String.prototype.format = function() {
    var args = arguments;
    return this.replace(/{(\d+)}/g, function(match, number) { 
      return typeof args[number] != 'undefined'
        ? args[number]
        : match
      ;
    });
  };
}
// "{0} is dead, but {1} is alive! {0} {2}".format("ASP", "ASP.NET")

var path = Routing.generate('comment_check');
var curPage = {
    moduleId: $("#module_id").val(), 
    lastCommentId: $('.last_comment_id:first').html(),
    hasNew : false,
    threadIds : []
  };

$(".thread_id").each(function () {
  curPage.threadIds.push($(this).html());
});

curPage.threadIds.sort(function (a, b) { return a - b; });
// console.log(curPage, curPage.threadIds);

if (curPage.lastCommentId != null || 
  curPage.lastCommentId !== undefined) {
  // check();
}

function check() {
  $.ajax({
    type: "POST",
    url: path,
    dataType: "json",
    data: { module_id: curPage.moduleId, id: 1 }
  }).done(function(data) {
    if (data.code == 100 && data.success) {  
        $.each(data.comments, function(key, val) {  

        });
        console.log(data.comments);
    }
  }).fail(function() {
  }).always(function () {
  });
}
</script>
{% endblock %}
