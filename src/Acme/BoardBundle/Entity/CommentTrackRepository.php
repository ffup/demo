<?php

namespace Acme\BoardBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Acme\UserBundle\Entity\User;

/**
 * CommentTrackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentTrackRepository extends EntityRepository
{
    
    public function create(User $user, Comment $comment)
    {  
        $track = new \Acme\BoardBundle\Entity\CommentTrack();
        $track->setUser($user)
            ->setComment($comment)
            ->setThread($comment->getThread())
            ->setHasVoted(true);
              
        $comment->setVotes($comment->getVotes() + 1);
        $this->_em->persist($track);               
        $this->_em->persist($comment);        
        $this->_em->flush();
    }
    
    public function vote(\Acme\BoardBundle\Entity\CommentTrack $track)
    {
        if ($track->getHasVoted()) {
            $this->undoVote($track);
        } else {
            $this->doVote($track);        
        }
    }
    
    private function doVote(\Acme\BoardBundle\Entity\CommentTrack $track)
    {  
        $track->setHasVoted(true);
        $comment = $track->getComment();
        $comment->setVotes($comment->getVotes() + 1);
        
        $this->_em->persist($track);               
        $this->_em->persist($comment);        
        $this->_em->flush();
    }
    
    private function undoVote(\Acme\BoardBundle\Entity\CommentTrack $track)
    {
        $track->setHasVoted(false);
        $comment = $track->getComment();
        $votes = $comment->getVotes();
        
        if ($votes == 0) {
            throw new \UnexpectedValueException();
        }
        
        $comment->setVotes($comment->getVotes() - 1);
        
        $this->_em->persist($track);               
        $this->_em->persist($comment);        
        $this->_em->flush();
    }
}
