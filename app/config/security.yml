security:
    #acl:
        #connection: default

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Acme\UserBundle\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        user_db:
            id: acme_user_provider
            #entity: { class: Acme\UserBundle\Entity\User } 

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/secured/signin$
            security: false
     
        main:
            pattern:    ^/
            form_login:
                # submit the login form here
                check_path: _signin_check
                
                # the user is redirected here when they need to log in
                login_path: _signin
                
                # if true, forward the user to the login form instead of redirecting
                use_forward: false
                
                # login success redirecting options
                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          _target_path
                #use_referer:                    true
            
            oauth:
                resource_owners:
                    google:             google_login

                login_path:        _signin
                use_forward:       false
                failure_path:      _signin

                oauth_user_provider:
                    service: acme_oauth_provider

            switch_user:  true
            
            remember_me:
                key:      "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~ # Defaults to the current domain from $_SERVER

            logout:
                path:                 _signout
                target:               _signin
                success_handler:      ~
                invalidate_session:   true
                delete_cookies:

                    # Prototype
                    name:
                        path:                 ~
                        domain:               ~
    
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
            
    access_control:
        - { path: /user, roles: ROLE_USER }
        - { path: /settings, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }        
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
